library IEEE;
use IEEE.std_logic_1164.all;

entity reg_id_ex is
port(i_ReadB         : in std_logic_vector(31 downto 0);
     i_ReadA          : in std_logic_vector(31 downto 0);
     i_SignExt         : in std_logic_vector(31 downto 0);
     i_clk	     : in std_logic;
     i_reset	     : in std_logic;
     i_WB_in	     : in std_logic;
     i_M_in	     : in std_logic;
     i_EX_in         : in std_logic;
     o_WB_out	     : out std_logic;
     o_M_out	     : out std_logic;
     o_EX_out        : out std_logic;
     o_ReadB	     : out std_logic_vector(31 downto 0);
     o_SignExt     : out std_logic_vector(31 downto 0);
     o_ReadA	     : out std_logic_vector(31 downto 0));

end reg_id_ex;

architecture structural of reg_id_ex is
	
	component nbitreg_struct is
		generic(N : integer := 32);
		port(i_Reg       : in std_logic_vector(31 downto 0);
       		o_Reg            : out std_logic_vector(31 downto 0);
		r_Reg            : in std_logic;
		c_Reg            : in std_logic;
		e_Reg            : in std_logic);
	end component;
	component OnebitReg_struct is
		port(i_Reg       : in std_logic;
       		o_Reg            : out std_logic;
		r_Reg            : in std_logic;
		c_Reg            : in std_logic;
		e_Reg            : in std_logic);
	end component;

signal s_reset : std_logic;

begin

s_reset <= i_reset;

 Reg_ReadB: nbitreg_struct port map(
              i_Reg    => i_ReadB,      -- All instances share the same select input.
              r_Reg    => i_reset,  -- ith instance's data 0 input hooked up to ith data 0 input.
              c_Reg    => i_clk,  -- ith instance's data 1 input hooked up to ith data 1 input.
              e_Reg    => '1',
	      o_Reg    => o_ReadB);

 Reg_ReadA: nbitreg_struct port map(
              i_Reg    => i_ReadA,      -- All instances share the same select input.
              r_Reg    => i_reset,  -- ith instance's data 0 input hooked up to ith data 0 input.
              c_Reg    => i_clk,  -- ith instance's data 1 input hooked up to ith data 1 input.
              e_Reg    => '1',
	      o_Reg    => o_ReadA);
 Reg_WB: OnebitReg_struct port map(
              i_Reg    => i_WB_in,      -- All instances share the same select input.
              r_Reg    => i_reset,  -- ith instance's data 0 input hooked up to ith data 0 input.
              c_Reg    => i_clk,  -- ith instance's data 1 input hooked up to ith data 1 input.
              e_Reg    => '1',
	      o_Reg    => o_WB_out);
 Reg_M: OnebitReg_struct port map(
              i_Reg    => i_M_in,      -- All instances share the same select input.
              r_Reg    => i_reset,  -- ith instance's data 0 input hooked up to ith data 0 input.
              c_Reg    => i_clk,  -- ith instance's data 1 input hooked up to ith data 1 input.
              e_Reg    => '1',
	      o_Reg    => o_M_out);
 Reg_EX: OnebitReg_struct port map(
              i_Reg    => i_EX_in,      -- All instances share the same select input.
              r_Reg    => i_reset,  -- ith instance's data 0 input hooked up to ith data 0 input.
              c_Reg    => i_clk,  -- ith instance's data 1 input hooked up to ith data 1 input.
              e_Reg    => '1',
	      o_Reg    => o_EX_out);


end structural;